<Activity mc:Ignorable="sap sap2010" x:Class="DataChecking" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="pdfContent" Type="InArgument(scg:Dictionary(x:String, scg:List(x:String)))" />
    <x:Property Name="scrappedContent" Type="InArgument(scg:Dictionary(x:String, scg:List(x:String)))" />
    <x:Property Name="failFlag" Type="InOutArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1152,2741</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>DataChecking_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="DataChecking" sap:VirtualizedContainerService.HintSize="1132,2641" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Default="0" Name="counter" />
      <Variable x:TypeArguments="scg:Dictionary(x:Int32, scg:List(x:String))" Default="[New Dictionary(Of Int32, List(Of String))]" Name="contentMap" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="1090,1524" sap2010:WorkflowViewState.IdRef="DoWhile_1" Condition="[counter &lt; pdfContent.Count]">
      <Sequence sap:VirtualizedContainerService.HintSize="1044,1360" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <Sequence.Variables>
          <Variable x:TypeArguments="scg:List(x:String)" Name="listContent" />
          <Variable x:TypeArguments="x:String" Name="itemName" />
          <Variable x:TypeArguments="x:String" Name="hargaSatuan" />
          <Variable x:TypeArguments="x:String" Name="itemAmount" />
          <Variable x:TypeArguments="x:String" Name="quantity" />
          <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="listContentNew" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="1002,60" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[itemName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[pdfContent.ElementAt(counter).Key]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="1002,60" sap2010:WorkflowViewState.IdRef="Assign_3">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[quantity]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[pdfContent.ElementAt(counter).Value(0).Replace(",","").Replace(".",",")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="1002,60" sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[hargaSatuan]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[pdfContent.ElementAt(counter).Value(1)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="1002,60" sap2010:WorkflowViewState.IdRef="Assign_5">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[itemAmount]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[pdfContent.ElementAt(counter).Value(2).Replace(",","").Replace(".",",")]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[scrappedContent.Keys.Contains(itemName)]" sap:VirtualizedContainerService.HintSize="1002,768" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="304,376" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">[listContent]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)">[scrappedContent(itemName)]</InArgument>
                </Assign.Value>
              </Assign>
              <AddToCollection x:TypeArguments="x:String" Collection="[listContentNew]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[quantity]" />
              <AddToCollection x:TypeArguments="x:String" Collection="[listContentNew]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="[itemAmount]" />
              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">[contentMap(Convert.ToInt32(listContent(0)))]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)">[listContentNew]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="653,618" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[itemName.Contains(scrappedContent.ElementAt(counter).Key)]" sap:VirtualizedContainerService.HintSize="611,526" sap2010:WorkflowViewState.IdRef="If_9">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="304,376" sap2010:WorkflowViewState.IdRef="Sequence_15">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:List(x:String)">[listContent]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:List(x:String)">[scrappedContent.ElementAt(counter).Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <AddToCollection x:TypeArguments="x:String" Collection="[listContentNew]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6" Item="[quantity]" />
                    <AddToCollection x:TypeArguments="x:String" Collection="[listContentNew]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_7" Item="[itemAmount]" />
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:List(x:String)">[contentMap(Convert.ToInt32(listContent(0)))]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:List(x:String)">[listContentNew]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[failFlag]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">1</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
            </Sequence>
          </If.Else>
        </If>
        <Assign sap:VirtualizedContainerService.HintSize="1002,60" sap2010:WorkflowViewState.IdRef="Assign_7">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[counter + 1]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
    </DoWhile>
    <If Condition="[failFlag = 0]" sap:VirtualizedContainerService.HintSize="1090,985" sap2010:WorkflowViewState.IdRef="If_8">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="526,835" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Int32" Default="0" Name="counterPartial" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="484,743" sap2010:WorkflowViewState.IdRef="DoWhile_2" Condition="[counterPartial &lt; contentMap.Count]">
            <Sequence sap:VirtualizedContainerService.HintSize="376,579" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="qty" />
                <Variable x:TypeArguments="x:String" Name="amt" />
                <Variable x:TypeArguments="x:Int32" Name="key" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[key]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[contentMap.ElementAt(counterPartial).Key]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[qty]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[contentMap(key)(0)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[amt]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[contentMap(key)(1)]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Partial_Input workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Partial_Input.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Int32" x:Key="row">[key]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="qty">[qty]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="amount">[amt]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[counterPartial]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[counterPartial + 1]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </DoWhile>
        </Sequence>
      </If.Then>
    </If>
  </Sequence>
</Activity>