<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="668,710" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="30">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Invoice Import" sap:VirtualizedContainerService.HintSize="648,650" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:List(x:String)))" Default="[New Dictionary(Of String, Dictionary(Of String, List(Of String)))]" Name="fileContentMap" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" Default="[New Dictionary(Of String, List(Of String))]" Name="folderFileMap" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:String, x:String)))" Default="[New Dictionary(Of String, Dictionary(Of String, Dictionary(Of String, String)))]" Name="folderFileContentMap" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" Default="[New Dictionary(Of String, List(Of String))]" Name="folderFailData" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:List(x:Int32))" Default="[New Dictionary(Of String, List(Of Integer))]" Name="leftoverMap" />
      <Variable x:TypeArguments="x:String" Default="[System.DateTime.Now.ToString(&quot;dd-MM-yyyy&quot;)]" Name="localDate" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[New Dictionary(Of String,String)]" Name="settingMap" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">0,12.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">60,50 120,50</av:PointCollection>
        <x:Double x:Key="Width">614</x:Double>
        <x:Double x:Key="Height">614</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID6</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">120,266</av:Point>
          <av:Size x:Key="ShapeSize">200,68</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">320,300 380,300</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Open SAP" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Default="RPA_AP" Name="usernameSAP" />
          <Variable x:TypeArguments="x:String" Default="initial2" Name="passwordSAP" />
          <Variable x:TypeArguments="x:String" Default="/NMIR7" Name="tcodeNMIR7" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="saplogon.exe" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
        <ui:ClickText ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" FormattedText="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_DOUBLE" DisplayName="Double Click Text" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="ClickText_2" KeyModifiers="None" MouseButton="BTN_LEFT" Occurrence="1" Text="Connections">
          <ui:ClickText.CursorPosition>
            <ui:CursorPosition Position="Center">
              <ui:CursorPosition.OffsetX>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:CursorPosition.OffsetX>
              <ui:CursorPosition.OffsetY>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:CursorPosition.OffsetY>
            </ui:CursorPosition>
          </ui:ClickText.CursorPosition>
          <ui:ClickText.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="92d0d54dd54a5b94ed36009c715530d3" Selector="&lt;wnd app='saplogon.exe' cls='#32770' title='SAP Logon 730' /&gt;&lt;wnd ctrlid='100' omit:title='SAP&amp;apos;s Advanced Treelist' /&gt;">
              <ui:Target.TimeoutMS>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:Target.TimeoutMS>
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:ClickText.Target>
        </ui:ClickText>
        <ui:ClickText ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" FormattedText="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Text 'list item  Shadow'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="ClickText_3" KeyModifiers="None" MouseButton="BTN_LEFT" Occurrence="1" Text="Shadow">
          <ui:ClickText.CursorPosition>
            <ui:CursorPosition Position="Center">
              <ui:CursorPosition.OffsetX>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:CursorPosition.OffsetX>
              <ui:CursorPosition.OffsetY>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:CursorPosition.OffsetY>
            </ui:CursorPosition>
          </ui:ClickText.CursorPosition>
          <ui:ClickText.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="7f5185bbd58cec0b43a4b2bb20680952" Selector="&lt;wnd app='saplogon.exe' cls='#32770' title='SAP Logon 730' /&gt;&lt;wnd ctrlid='5002' title='myContainer' /&gt;&lt;wnd ctrlid='1008' /&gt;&lt;ctrl name='Shadow' role='list item' /&gt;">
              <ui:Target.TimeoutMS>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:Target.TimeoutMS>
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:ClickText.Target>
        </ui:ClickText>
        <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DelayMS="3000" DisplayName="Send Hotkey 'list item  Shadow'" sap:VirtualizedContainerService.HintSize="334,155" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="enter" KeyModifiers="None" SpecialKey="True">
          <ui:SendHotkey.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="3765d187ee915407dea3f91c44c281e4" Selector="&lt;wnd app='saplogon.exe' cls='#32770' title='SAP Logon 730' /&gt;&lt;wnd ctrlid='5002' title='myContainer' /&gt;&lt;wnd ctrlid='1008' /&gt;">
              <ui:Target.TimeoutMS>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:Target.TimeoutMS>
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:SendHotkey.Target>
        </ui:SendHotkey>
        <ui:SetValue ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayAfter="1000" DisplayName="Set Text 'TextField  User name'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="SetValue_1" Text="[usernameSAP]">
          <ui:SetValue.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="adc837b026e145b036484174e5286c51" Selector="&lt;wnd app='saplogon.exe' cls='SAP_FRONTEND_SESSION' title='SAP' /&gt;&lt;sap id='usr/txtRSYST-BNAME' /&gt;">
              <ui:Target.TimeoutMS>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:Target.TimeoutMS>
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:SetValue.Target>
        </ui:SetValue>
        <ui:SetValue ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayAfter="1000" DisplayName="Set Text 'PasswordField  Password'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="SetValue_2" Text="[passwordSAP]">
          <ui:SetValue.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="79ae114887644fde00b8eb2a2283fd61" Selector="&lt;wnd app='saplogon.exe' cls='SAP_FRONTEND_SESSION' title='SAP' /&gt;&lt;sap id='usr/pwdRSYST-BCODE' /&gt;">
              <ui:Target.TimeoutMS>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:Target.TimeoutMS>
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:SetValue.Target>
        </ui:SetValue>
        <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DelayMS="2000" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="334,117" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="enter" KeyModifiers="None" SpecialKey="True">
          <ui:SendHotkey.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
              <ui:Target.TimeoutMS>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:Target.TimeoutMS>
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:SendHotkey.Target>
        </ui:SendHotkey>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">380,266</av:Point>
              <av:Size x:Key="ShapeSize">200,68</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">480,334 480,396</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Data Checking" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Default="0" Name="counter" />
              <Variable x:TypeArguments="x:Int32" Default="0" Name="failFlag" />
              <Variable x:TypeArguments="x:String" Default="[Environment.CurrentDirectory+&quot;\fail\&quot;]" Name="failDir" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'OkCodeField  okcd'" sap:VirtualizedContainerService.HintSize="1166,134" sap2010:WorkflowViewState.IdRef="TypeInto_1" Text="/nme23n">
              <ui:TypeInto.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="e3a6557fd1b16faa57daaef37d0aae3e" Selector="&lt;wnd app='saplogon.exe' cls='SAP_FRONTEND_SESSION' omit:title='Trade Local 6100064034 Created by Melwin' /&gt;&lt;sap id='tbar[0]/okcd' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:TypeInto.Target>
            </ui:TypeInto>
            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DelayMS="2000" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="1166,117" sap2010:WorkflowViewState.IdRef="SendHotkey_7" Key="enter" KeyModifiers="None" SpecialKey="True">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="1166,2868" sap2010:WorkflowViewState.IdRef="DoWhile_2" Condition="[counter &lt; folderFileContentMap.Count]">
              <Sequence sap:VirtualizedContainerService.HintSize="1120,2704" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <Sequence.Variables>
                  <Variable x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" Default="[New Dictionary(Of String, List(Of String))]" Name="materialMap" />
                  <Variable x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" Default="[New Dictionary(Of String, List(Of String))]" Name="currentContent" />
                  <Variable x:TypeArguments="x:String" Name="fileName" />
                  <Variable x:TypeArguments="x:String" Name="folderName" />
                  <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="failData" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="1078,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[folderName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[folderFileContentMap.ElementAt(counter).Key]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, scg:Dictionary(x:String, x:String))" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1078,2162" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[folderFileContentMap.ElementAt(counter).Value]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, scg:Dictionary(x:String, x:String))">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, scg:Dictionary(x:String, x:String))" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1042,2027" sap2010:WorkflowViewState.IdRef="Sequence_21">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:List(x:Int32)" Default="[New List(of Integer)]" Name="leftoverData" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="1000,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[item.Key]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CheckME23N workflow" sap:VirtualizedContainerService.HintSize="1000,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="CheckME23N.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="poNumber">[item.Value("NoPO")]</InArgument>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" x:Key="materialMap">[materialMap]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Assign sap:VirtualizedContainerService.HintSize="1000,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                          <Assign.To>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))">[currentContent]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))">[fileContentMap(fileName)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[currentContent.Count=materialMap.Count]" sap:VirtualizedContainerService.HintSize="1000,479" sap2010:WorkflowViewState.IdRef="If_13">
                          <If.Then>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke DataChecking workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="DataChecking.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" x:Key="pdfContent">[currentContent]</InArgument>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" x:Key="scrappedContent">[materialMap]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="totalAmountPayable">[item.Value("total")]</InArgument>
                                <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="failData">[failData]</InOutArgument>
                                <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="leftoverData">[leftoverData]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </If.Then>
                          <If.Else>
                            <If Condition="[materialMap.Count&gt;currentContent.count]" sap:VirtualizedContainerService.HintSize="621,329" sap2010:WorkflowViewState.IdRef="If_14">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke DataChecking workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="DataChecking.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" x:Key="pdfContent">[currentContent]</InArgument>
                                      <InOutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" x:Key="scrappedContent">[materialMap]</InOutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="totalAmountPayable">[item.Value("total")]</InArgument>
                                      <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="failData">[failData]</InOutArgument>
                                      <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="leftoverData">[leftoverData]</InOutArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <AddToCollection x:TypeArguments="x:String" Collection="[failData]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_8" Item="[fileName]" />
                              </If.Else>
                            </If>
                          </If.Else>
                        </If>
                        <If Condition="[leftoverData.Count &lt;&gt; 0]" sap:VirtualizedContainerService.HintSize="1000,210" sap2010:WorkflowViewState.IdRef="If_15">
                          <If.Then>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                              <Assign.To>
                                <OutArgument x:TypeArguments="scg:List(x:Int32)">[leftoverMap(fileName)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="scg:List(x:Int32)">[leftoverData]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                        </If>
                        <If Condition="[failData.Count = 0]" sap:VirtualizedContainerService.HintSize="1000,839" sap2010:WorkflowViewState.IdRef="If_17">
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="454,689" sap2010:WorkflowViewState.IdRef="Sequence_40">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="failFile" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <AddToCollection x:TypeArguments="x:String" Collection="[failFile]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="412,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_10" Item="[fileName]" />
                              <ui:AppendLine DisplayName="Append Line" FileName="[settingMap(&quot;FailDirAPI&quot;) + localDate + &quot;.txt&quot;]" sap:VirtualizedContainerService.HintSize="412,134" sap2010:WorkflowViewState.IdRef="AppendLine_5" Text="[fileName + &quot; :&quot;]" />
                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="412,361" sap2010:WorkflowViewState.IdRef="ForEach`1_27" Values="[failFile]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:String">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,226" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:AppendLine DisplayName="Append Line" FileName="[settingMap(&quot;FailDirAPI&quot;) + localDate + &quot;.txt&quot;]" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="AppendLine_6" Text="[item]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
                <If Condition="[failData.Count &lt;&gt; 0]" sap:VirtualizedContainerService.HintSize="1078,210" sap2010:WorkflowViewState.IdRef="If_4">
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:List(x:String)">[folderFailData(folderName)]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:List(x:String)">[failData]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                </If>
                <Assign sap:VirtualizedContainerService.HintSize="1078,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[counter + 1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </DoWhile>
            <If Condition="[folderFailData.Count &lt;&gt; 0]" sap:VirtualizedContainerService.HintSize="1166,1662" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="592,1512" sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="row" />
                    <Variable x:TypeArguments="x:Int32" Default="0" Name="failCounter" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="550,1420" sap2010:WorkflowViewState.IdRef="DoWhile_7" Condition="[failCounter &lt; folderFailData.Count]">
                    <Sequence sap:VirtualizedContainerService.HintSize="504,1256" sap2010:WorkflowViewState.IdRef="Sequence_23">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="folderName" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="462,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[folderName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[folderFailData.ElementAt(failCounter).Key]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="462,537" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[folderFailData(folderName)]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="280,402" sap2010:WorkflowViewState.IdRef="Sequence_22">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="238,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Remove">
                                <InvokeMethod.TargetObject>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:String))">[folderFileContentMap(folderName)]</InArgument>
                                </InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="x:String">[item]</InArgument>
                              </InvokeMethod>
                              <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="238,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Remove">
                                <InvokeMethod.TargetObject>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:List(x:String)))">[fileContentMap]</InArgument>
                                </InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="x:String">[item]</InArgument>
                              </InvokeMethod>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Move Fail " sap:VirtualizedContainerService.HintSize="462,387" sap2010:WorkflowViewState.IdRef="ForEach`1_14" Values="[folderFailData.ElementAt(failCounter).Value]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="426,252" sap2010:WorkflowViewState.IdRef="Sequence_31">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MoveFile ContinueOnError="{x:Null}" Destination="[settingMap(&quot;FailDirAPI&quot;)]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="384,160" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True" Path="[item]" />
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                      <Assign sap:VirtualizedContainerService.HintSize="462,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[failCounter]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[failCounter + 1]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </DoWhile>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">380,396</av:Point>
                  <av:Size x:Key="ShapeSize">200,68</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Input To SAP" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_14">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Default="0" Name="counter" />
                  <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="totalFailList" />
                  <Variable x:TypeArguments="x:String" Name="docNumber" />
                  <Variable x:TypeArguments="x:String" Default="[Environment.CurrentDirectory+&quot;\success\&quot;]" Name="successDir" />
                  <Variable x:TypeArguments="x:String" Default="[Environment.CurrentDirectory+&quot;\Log\&quot;]" Name="logDir" />
                  <Variable x:TypeArguments="x:String" Default="[System.DateTime.Now.ToString(&quot;dd-MM-yyyy_hh-mm-ss&quot;)]" Name="localTime" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="837,2534" sap2010:WorkflowViewState.IdRef="DoWhile_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <DoWhile.Condition>[counter &lt; folderFileContentMap.Count]</DoWhile.Condition>
                  <Sequence sap:VirtualizedContainerService.HintSize="611,2370" sap2010:WorkflowViewState.IdRef="Sequence_17">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="folderName" />
                      <Variable x:TypeArguments="x:String" Name="tglPostingDate" />
                      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="failList" />
                      <Variable x:TypeArguments="x:Int32" Default="0" Name="newFailFlag" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="569,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[folderName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[folderFileContentMap.ElementAt(counter).Key]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[folderFailData.ContainsKey(folderName)]" sap:VirtualizedContainerService.HintSize="569,210" sap2010:WorkflowViewState.IdRef="If_6">
                      <If.Then>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                          <Assign.To>
                            <OutArgument x:TypeArguments="scg:List(x:String)">[failList]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="scg:List(x:String)">[folderFailData(folderName)]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[newFailFlag]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">1</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                    <Assign sap:VirtualizedContainerService.HintSize="569,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[tglPostingDate]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[folderName.Split({"\"}, System.StringSplitOptions.None).Last]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, scg:Dictionary(x:String, x:String))" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="569,1478" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[folderFileContentMap(folderName)]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, scg:Dictionary(x:String, x:String))">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, scg:Dictionary(x:String, x:String))" Name="item" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1343" sap2010:WorkflowViewState.IdRef="Sequence_24">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="fileName" />
                              <Variable x:TypeArguments="x:Int32" Default="0" Name="failFlag" />
                              <Variable x:TypeArguments="scg:List(x:Int32)" Default="[New List(Of Integer)]" Name="leftoverData" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[item.Key]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[leftoverMap.Keys.Contains(fileName)]" sap:VirtualizedContainerService.HintSize="484,210" sap2010:WorkflowViewState.IdRef="If_18">
                              <If.Then>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="scg:List(x:Int32)">[leftoverData]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="scg:List(x:Int32)">[leftoverMap(fileName)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke inputDataIntoSAP workflow" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="inputDataIntoSAP.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="pdfData">[item.Value]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" x:Key="contentData">[fileContentMap(fileName)]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="tglPostingDate">[tglPostingDate]</InArgument>
                                <InOutArgument x:TypeArguments="x:Int32" x:Key="failFlag">[failFlag]</InOutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_docNumber">[docNumber]</OutArgument>
                                <InArgument x:TypeArguments="scg:List(x:Int32)" x:Key="leftoverData">[leftoverData]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:AppendLine DisplayName="Append Line" FileName="[settingMap(&quot;SuccessDirAPI&quot;)+localDate+&quot;.txt&quot;]" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="AppendLine_2" Text="[docNumber]" />
                            <ui:AppendLine DisplayName="Append Line" FileName="[settingMap(&quot;LogDirAPI&quot;)+localTime+&quot;.txt&quot;]" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="AppendLine_7" Text="[System.Text.RegularExpressions.Regex.Replace(docNumber, &quot;[^0-9]&quot;, &quot;&quot;)]" />
                            <If Condition="[failFlag = 0]" sap:VirtualizedContainerService.HintSize="484,326" sap2010:WorkflowViewState.IdRef="If_5">
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <AddToCollection x:TypeArguments="x:String" Collection="[failList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6" Item="[fileName]" />
                                  <AddToCollection x:TypeArguments="x:String" Collection="[totalFailList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_7" Item="[fileName]" />
                                </Sequence>
                              </If.Else>
                            </If>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[failFlag]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                    <If Condition="[newFailFlag = 0]" sap:VirtualizedContainerService.HintSize="569,210" sap2010:WorkflowViewState.IdRef="If_7">
                      <If.Else>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                          <Assign.To>
                            <OutArgument x:TypeArguments="scg:List(x:String)">[folderFailData(folderName)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="scg:List(x:String)">[failList]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                    <Assign sap:VirtualizedContainerService.HintSize="569,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[counter + 1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </DoWhile>
                <If Condition="[totalFailList.Count &lt;&gt; 0]" sap:VirtualizedContainerService.HintSize="837,1210" sap2010:WorkflowViewState.IdRef="If_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="692,1060" sap2010:WorkflowViewState.IdRef="Sequence_28">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Int32" Default="0" Name="failCounter" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="650,968" sap2010:WorkflowViewState.IdRef="DoWhile_8" Condition="[failCounter &lt; totalFailList.Count]">
                        <Sequence sap:VirtualizedContainerService.HintSize="604,804" sap2010:WorkflowViewState.IdRef="Sequence_27">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="folderName" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[folderName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[folderFailData.ElementAt(failCounter).Key]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,512" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[folderFailData(folderName)]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:String">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,377" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[folderFileContentMap(folderName).ContainsKey(item)]" sap:VirtualizedContainerService.HintSize="484,285" sap2010:WorkflowViewState.IdRef="If_9">
                                    <If.Then>
                                      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="238,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Remove">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:String))">[folderFileContentMap(folderName)]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">[item]</InArgument>
                                      </InvokeMethod>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                          <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[failCounter]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[failCounter + 1]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </DoWhile>
                    </Sequence>
                  </If.Then>
                </If>
                <ui:CloseApplication DisplayName="Close Application 'saplogon.exe SAP'" sap:VirtualizedContainerService.HintSize="837,106" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
                  <ui:CloseApplication.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="e24d709ddce73b957be1f66aa7580769" Selector="&lt;wnd app='saplogon.exe' cls='SAP_FRONTEND_SESSION' omit:title='SAP' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:CloseApplication.Target>
                </ui:CloseApplication>
              </Sequence>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">380,136</av:Point>
          <av:Size x:Key="ShapeSize">200,68</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">380,170 320,170</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Process PDF Files" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_8">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Int32" Default="0" Name="counter" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="500,1070" sap2010:WorkflowViewState.IdRef="DoWhile_1" Condition="[counter &lt; folderFileMap.Count]">
          <Sequence sap:VirtualizedContainerService.HintSize="454,906" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:String))" Default="[New Dictionary(Of String, Dictionary(Of String, String))]" Name="pdfData" />
              <Variable x:TypeArguments="x:String" Name="folderName" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="412,514" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[folderFileMap.ElementAt(counter).Value]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,379" sap2010:WorkflowViewState.IdRef="Sequence_19">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="fileName" />
                      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[New Dictionary(Of String, String)]" Name="pdfContent" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke readPDF workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="readPDF.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_pdfFile">[item]</InArgument>
                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_content">[pdfContent]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[item]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[pdfData(fileName)]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[pdfContent]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <Assign sap:VirtualizedContainerService.HintSize="412,60" sap2010:WorkflowViewState.IdRef="Assign_21">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[folderName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[folderFileMap.ElementAt(counter).Key]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="412,60" sap2010:WorkflowViewState.IdRef="Assign_17">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:String))">[folderFileContentMap(folderName)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:String))">[pdfData]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="412,60" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[counter + 1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </DoWhile>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">120,136</av:Point>
              <av:Size x:Key="ShapeSize">200,68</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">220,204 220,266</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Process Material" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Default="0" Name="counter" />
              <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:Dictionary(x:String, scg:List(x:String))))" Default="[New Dictionary(Of String, Dictionary(Of String, Dictionary(Of String, List(Of String))))]" Name="folderFileContent" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="500,1067" sap2010:WorkflowViewState.IdRef="DoWhile_4" Condition="[counter &lt; folderFileContentMap.Count]">
              <Sequence DisplayName="inside loop" sap:VirtualizedContainerService.HintSize="454,905" sap2010:WorkflowViewState.IdRef="Sequence_11">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="index" />
                  <Variable x:TypeArguments="x:String" Name="folderFile" />
                  <Variable x:TypeArguments="x:String" Name="folderName" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, scg:Dictionary(x:String, x:String))" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="412,513" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[folderFileContentMap.ElementAt(counter).Value]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, scg:Dictionary(x:String, x:String))">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, scg:Dictionary(x:String, x:String))" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,379" sap2010:WorkflowViewState.IdRef="Sequence_20">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="fileName" />
                          <Variable x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" Default="[New Dictionary(Of String, List(Of String))]" Name="contentMap" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[item.Key]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke contentExtraction workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="contentExtraction.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_pdfData">[item.Value]</InArgument>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" x:Key="out_contentMap">[contentMap]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                          <Assign.To>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))">[fileContentMap(fileName)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))">[contentMap]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
                <Assign sap:VirtualizedContainerService.HintSize="412,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[folderName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[folderFileContentMap.ElementAt(counter).Key]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="412,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                  <Assign.To>
                    <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:List(x:String)))">[folderFileContent(folderName)]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:List(x:String)))">[fileContentMap]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="412,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[counter + 1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </DoWhile>
          </Sequence>
          <FlowStep.Next>
            <x:Reference>__ReferenceID0</x:Reference>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">380,16</av:Point>
          <av:Size x:Key="ShapeSize">200,68</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">480,84 480,136</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Get Files" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <Sequence.Variables>
          <Variable x:TypeArguments="s:String[]" Name="workingDir" />
          <Variable x:TypeArguments="x:Int32" Default="0" Name="counter" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="650,60" sap2010:WorkflowViewState.IdRef="Assign_52">
          <Assign.To>
            <OutArgument x:TypeArguments="s:String[]">[workingDir]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:String[]">[Directory.GetDirectories(settingMap("UploadDirAPI"))]</InArgument>
          </Assign.Value>
        </Assign>
        <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="650,893" sap2010:WorkflowViewState.IdRef="DoWhile_6" Condition="[counter &lt; workingDir.Length]">
          <Sequence sap:VirtualizedContainerService.HintSize="604,729" sap2010:WorkflowViewState.IdRef="Sequence_18">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="filesList" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,437" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetFiles(workingDir(counter))]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="pdf" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,302" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[System.IO.Path.GetExtension(pdf).ToLower = &quot;.pdf&quot;]" sap:VirtualizedContainerService.HintSize="484,210" sap2010:WorkflowViewState.IdRef="If_19">
                      <If.Then>
                        <AddToCollection x:TypeArguments="x:String" Collection="[filesList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_11" Item="[pdf]" />
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_14">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">[folderFileMap(workingDir(counter))]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">[filesList]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_13">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[counter + 1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </DoWhile>
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID1</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <FlowStep x:Name="__ReferenceID6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">120,16</av:Point>
          <av:Size x:Key="ShapeSize">200,68</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">320,50 380,50</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Setting" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_44">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="dt" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,800" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="C:\UiPath\setting.xlsx">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="396,691" sap2010:WorkflowViewState.IdRef="Sequence_43">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[dt]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="354,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="A1" SheetName="Sheet1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadRange>
                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dt]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="354,500" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,352" sap2010:WorkflowViewState.IdRef="Sequence_42">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="keyExcel" />
                          <Variable x:TypeArguments="x:String" Name="valueExcel" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[keyExcel]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[row.Item(0).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[valueExcel]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[row.Item(1).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_51">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[settingMap(keyExcel)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[valueExcel]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
        </ui:ExcelApplicationScope>
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID5</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">90,415.6</av:Point>
          <av:Size x:Key="ShapeSize">200,68</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Send Mail and Move Success File" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_55">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Int32" Default="0" Name="counter" />
          <Variable x:TypeArguments="x:String" Default="Unsuccessful Create Invoice Subsidary" Name="subjectEmail" />
          <Variable x:TypeArguments="x:String" Name="bodyEmail" />
          <Variable x:TypeArguments="s:String[]" Name="failFolder" />
          <Variable x:TypeArguments="x:String" Name="folderName" />
          <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(of String)]" Name="listFailed" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="1286,1670" sap2010:WorkflowViewState.IdRef="DoWhile_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <DoWhile.Condition>[counter&lt; folderFileContentMap.Count]</DoWhile.Condition>
          <Sequence sap:VirtualizedContainerService.HintSize="1240,1508" sap2010:WorkflowViewState.IdRef="Sequence_49">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[folderFileContentMap.ElementAt(counter).Value.Count&lt;&gt;0]" sap:VirtualizedContainerService.HintSize="1198,1316" sap2010:WorkflowViewState.IdRef="If_21">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="1053,1168" sap2010:WorkflowViewState.IdRef="Sequence_48">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="isFolderExist" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="1011,60" sap2010:WorkflowViewState.IdRef="Assign_53">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[folderName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[folderFileMap.ElementAt(counter).Key.Split({"\"},StringSplitOptions.None).Last]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="1011,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[folderName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[settingMap("SuccessDirAPS")+folderName]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:PathExists DisplayName="Path Exists" Exists="[isFolderExist]" sap:VirtualizedContainerService.HintSize="1011,89" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[folderName]" PathType="Folder" />
                  <If Condition="[isFolderExist = True]" sap:VirtualizedContainerService.HintSize="1011,747" sap2010:WorkflowViewState.IdRef="If_20">
                    <If.Then>
                      <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, scg:Dictionary(x:String, x:String))" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="462,383" sap2010:WorkflowViewState.IdRef="ForEach`1_28" Values="[folderFileContentMap.ElementAt(counter).Value]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, scg:Dictionary(x:String, x:String))">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, scg:Dictionary(x:String, x:String))" Name="item" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="426,249" sap2010:WorkflowViewState.IdRef="Sequence_45">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MoveFile ContinueOnError="{x:Null}" Destination="[folderName]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="MoveFile_3" Overwrite="False" Path="[item.Key]" />
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="504,599" sap2010:WorkflowViewState.IdRef="Sequence_47">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="462,84" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[folderName]" />
                        <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, scg:Dictionary(x:String, x:String))" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="462,383" sap2010:WorkflowViewState.IdRef="ForEach`1_29" Values="[folderFileContentMap.ElementAt(counter).Value]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, scg:Dictionary(x:String, x:String))">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, scg:Dictionary(x:String, x:String))" Name="item" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="426,249" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:MoveFile ContinueOnError="{x:Null}" Destination="[folderName]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="MoveFile_4" Overwrite="False" Path="[item.Key]" />
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
            </If>
            <Assign sap:VirtualizedContainerService.HintSize="1198,60" sap2010:WorkflowViewState.IdRef="Assign_55">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[counter+1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </DoWhile>
        <If Condition="[folderFailData.Count &lt;&gt; 0]" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="1286,1213" sap2010:WorkflowViewState.IdRef="If_23">
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="692,1065" sap2010:WorkflowViewState.IdRef="Sequence_52">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Default="0" Name="counterFail" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="650,788" sap2010:WorkflowViewState.IdRef="DoWhile_11" Condition="[counterFail &lt; folderFailData.Count]">
                <Sequence sap:VirtualizedContainerService.HintSize="604,626" sap2010:WorkflowViewState.IdRef="Sequence_51">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,434" sap2010:WorkflowViewState.IdRef="ForEach`1_30" Values="[folderFailData.ElementAt(counterFail).Value]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,300" sap2010:WorkflowViewState.IdRef="Sequence_50">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[System.IO.Path.GetExtension(item).ToLower=&quot;.pdf&quot;]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_22">
                            <If.Then>
                              <AddToCollection x:TypeArguments="x:String" Collection="[listFailed]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_12" Item="[item]" />
                            </If.Then>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                  <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[counterFail]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[counterFail + 1]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </DoWhile>
              <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" TimeoutMS="{x:Null}" Body="[listFailed.Count.ToString +&quot; file(s) that fail to be processed&quot;]" DisplayName="Send SMTP Mail Message" Email="[settingMap(&quot;Sender&quot;)]" EnableSSL="True" From="[settingMap(&quot;Sender&quot;)]" sap:VirtualizedContainerService.HintSize="650,145" sap2010:WorkflowViewState.IdRef="SendMail_3" IsBodyHtml="False" Name="[settingMap(&quot;Sender&quot;)]" Port="[Convert.ToInt32(settingMap(&quot;Port&quot;))]" SecureConnection="Auto" Server="[settingMap(&quot;EmailServer&quot;)]" Subject="[subjectEmail]" To="[settingMap(&quot;ReceiverAPS&quot;)]">
                <ui:SendMail.Files>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                </ui:SendMail.Files>
              </ui:SendMail>
            </Sequence>
          </If.Then>
        </If>
        <Sequence sap:VirtualizedContainerService.HintSize="1286,854" sap2010:WorkflowViewState.IdRef="Sequence_54">
          <Sequence.Variables>
            <Variable x:TypeArguments="s:String[]" Name="foldersUpload" />
            <Variable x:TypeArguments="x:Int32" Default="0" Name="counterFolder" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="572,60" sap2010:WorkflowViewState.IdRef="Assign_57">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[foldersUpload]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[Directory.GetDirectories(settingMap("UploadDirAPS"))]</InArgument>
            </Assign.Value>
          </Assign>
          <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="572,662" sap2010:WorkflowViewState.IdRef="DoWhile_12" Condition="[counterFolder &lt; foldersUpload.Length]">
            <Sequence sap:VirtualizedContainerService.HintSize="526,500" sap2010:WorkflowViewState.IdRef="Sequence_53">
              <Sequence.Variables>
                <Variable x:TypeArguments="s:String[]" Name="files" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[files]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(foldersUpload(counterFolder))]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[files.Length = 0]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_24">
                <If.Then>
                  <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[foldersUpload(counterFolder)]" />
                </If.Then>
              </If>
              <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_59">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[counterFolder]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[counterFolder + 1]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </DoWhile>
        </Sequence>
      </Sequence>
    </FlowStep>
  </Flowchart>
</Activity>