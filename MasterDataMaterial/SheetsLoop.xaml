<Activity mc:Ignorable="sap sap2010" x:Class="SheetsLoop" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_file" Type="InArgument(x:String)" />
    <x:Property Name="in_lineReader" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="in_folder" Type="InArgument(x:String)" />
    <x:Property Name="in_counterFile" Type="InArgument(x:Int32)" />
    <x:Property Name="out_othersMap" Type="InOutArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, scg:List(x:String))))" />
    <x:Property Name="in_companyCodeLine" Type="InArgument(x:String)" />
    <x:Property Name="companyCodeMap" Type="InOutArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="textFilesMap" Type="InOutArgument(scg:Dictionary(x:String, scg:List(x:String)))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2114,4355</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SheetsLoop_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="25">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>DocumentFormat.OpenXml.Spreadsheet</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="21">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>DocumentFormat.OpenXml</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="SheetsLoop" sap:VirtualizedContainerService.HintSize="2094,4295" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="sheets" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="counter" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="workbook" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="filesCreated" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" Default="[New Dictionary(Of String, List(Of String))]" Name="filesCreatedMap" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" Default="[New Dictionary(Of String, List(Of String))]" Name="othersMap" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:List(x:String)))" Default="[New Dictionary(Of String, Dictionary(Of String, List(Of String)))]" Name="othersCreatedMap" />
      <Variable x:TypeArguments="x:String" Name="templateVersion" />
      <Variable x:TypeArguments="x:Double" Name="companyCode" />
      <Variable x:TypeArguments="x:String" Default="[Environment.CurrentDirectory + &quot;\fail\&quot;]" Name="failDir" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="versionFlag" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="2052,3464" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Workbook="[workbook]" WorkbookPath="[in_file]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Extract the data from the excel" sap:VirtualizedContainerService.HintSize="2018,3355" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="1976,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1" Sheets="[sheets]" />
            <DoWhile DisplayName="Loop on every sheet of the excel" sap:VirtualizedContainerService.HintSize="1976,3201" sap2010:WorkflowViewState.IdRef="DoWhile_1" Condition="[counter &lt; in_lineReader.Count]">
              <Sequence DisplayName="Loop for sheets" sap:VirtualizedContainerService.HintSize="1930,3040" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="dt" />
                  <Variable x:TypeArguments="x:String" Name="toText" />
                  <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="listData" />
                  <Variable x:TypeArguments="x:String" Name="fileName" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[sheets(counter).Split({&quot;\&quot;}, StringSplitOptions.None).Last = &quot;Material&quot;]" sap:VirtualizedContainerService.HintSize="1888,298" sap2010:WorkflowViewState.IdRef="If_6">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="[sheets(counter)]">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="x:String">[templateVersion]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                    </Sequence>
                  </If.Then>
                </If>
                <If Condition="[String.IsNullOrEmpty(templateVersion)]" sap:VirtualizedContainerService.HintSize="1888,207" sap2010:WorkflowViewState.IdRef="If_13">
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_33">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[templateVersion]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                </If>
                <If Condition="[templateVersion.ToLower = &quot;v10&quot;]" sap:VirtualizedContainerService.HintSize="1888,2363" sap2010:WorkflowViewState.IdRef="If_7">
                  <If.Then>
                    <Sequence DisplayName="Validation Version" sap:VirtualizedContainerService.HintSize="1539,2216" sap2010:WorkflowViewState.IdRef="Sequence_18">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dt]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="1497,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" PreserveFormat="True" Range="[&quot;A&quot;+in_lineReader(counter)]" SheetName="[sheets(counter)]" />
                      <Assign sap:VirtualizedContainerService.HintSize="1497,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[in_folder + "\" + sheets(counter).Split({"\"}, StringSplitOptions.None).Last + "[" + in_counterFile.ToString + "]" + counter.ToString + ".txt"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If Condition="[dt.Rows.Count &lt;&gt; 0]" DisplayName="To filter out the blank sheet" sap:VirtualizedContainerService.HintSize="1497,1825" sap2010:WorkflowViewState.IdRef="If_11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="To extract the data" sap:VirtualizedContainerService.HintSize="1352,1678" sap2010:WorkflowViewState.IdRef="Sequence_17">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:Int32" Default="0" Name="dtCounter" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[sheets(counter).Split({&quot;\&quot;}, StringSplitOptions.None).Last = &quot;Material&quot;]" DisplayName="To split out between material and the others" sap:VirtualizedContainerService.HintSize="1310,1586" sap2010:WorkflowViewState.IdRef="If_10">
                              <If.Then>
                                <Sequence DisplayName="To write material to text file" sap:VirtualizedContainerService.HintSize="651,1439" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelReadCell Cell="[in_companyCodeLine]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="609,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" SheetName="[sheets(counter)]">
                                    <ui:ExcelReadCell.Result>
                                      <OutArgument x:TypeArguments="x:Double">[companyCode]</OutArgument>
                                    </ui:ExcelReadCell.Result>
                                  </ui:ExcelReadCell>
                                  <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="609,1086" sap2010:WorkflowViewState.IdRef="DoWhile_5" Condition="[dtCounter &lt; dt.Rows.Count]">
                                    <Sequence sap:VirtualizedContainerService.HintSize="563,925" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[not String.Join(vbTab, dt.Rows(dtCounter).ItemArray).Contains(&quot;column&quot;)]" sap:VirtualizedContainerService.HintSize="521,733" sap2010:WorkflowViewState.IdRef="If_8">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,586" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:String" Name="numAndPlant" />
                                              <Variable x:TypeArguments="x:String" Name="number" />
                                              <Variable x:TypeArguments="x:String" Name="plant" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:AppendLine DisplayName="Append Line" FileName="[fileName]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_2" Text="[String.Join(vbTab, dt.Rows(dtCounter).ItemArray)]" />
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[number]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[dt.Rows(dtCounter).Item(0).ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[plant]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[dt.Rows(dtCounter).Item(3).ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[numAndPlant]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[number + ", " + plant]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="x:String" Collection="[listData]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[numAndPlant]" />
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                      <Assign sap:VirtualizedContainerService.HintSize="521,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[dtCounter]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[dtCounter + 1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </DoWhile>
                                  <Assign sap:VirtualizedContainerService.HintSize="609,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="scg:List(x:String)">[othersMap(fileName)]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="scg:List(x:String)">[listData]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <AddToCollection x:TypeArguments="x:String" Collection="[filesCreated]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="609,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="[fileName]" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="To extract the others data and keep it on dictionary" sap:VirtualizedContainerService.HintSize="614,752" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="572,560" sap2010:WorkflowViewState.IdRef="DoWhile_6" Condition="[dtCounter &lt; dt.Rows.Count]">
                                    <Sequence sap:VirtualizedContainerService.HintSize="526,399" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[not String.Join(vbTab, dt.Rows(dtCounter).ItemArray).Contains(&quot;column&quot;)]" sap:VirtualizedContainerService.HintSize="484,207" sap2010:WorkflowViewState.IdRef="If_9">
                                        <If.Then>
                                          <AddToCollection x:TypeArguments="x:String" Collection="[listData]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6" Item="[String.Join(vbTab, dt.Rows(dtCounter).ItemArray)]" />
                                        </If.Then>
                                      </If>
                                      <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[dtCounter]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[dtCounter + 1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </DoWhile>
                                  <Assign sap:VirtualizedContainerService.HintSize="572,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="scg:List(x:String)">[othersMap(fileName)]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="scg:List(x:String)">[listData]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                      </If>
                      <Assign sap:VirtualizedContainerService.HintSize="1497,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[counter + 1]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_19">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[versionFlag]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">1</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[in_lineReader.Count]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </DoWhile>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="2052,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_2" Workbook="[workbook]" />
    <If Condition="[versionFlag = 1]" sap:VirtualizedContainerService.HintSize="2052,600" sap2010:WorkflowViewState.IdRef="If_12">
      <If.Then>
        <ui:MoveFile ContinueOnError="{x:Null}" Destination="[failDir]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="MoveFile_2" Overwrite="False" Path="[in_file]" />
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="304,452" sap2010:WorkflowViewState.IdRef="Sequence_20">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_29">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))">[out_othersMap(in_file)]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))">[othersMap]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_30">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(x:String)">[filesCreatedMap(in_file)]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(x:String)">[filesCreated]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_31">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))">[textFilesMap]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))">[filesCreatedMap]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_32">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[companyCodeMap(in_file)]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[companyCode.ToString]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>