<Activity mc:Ignorable="sap sap2010" x:Class="RetrieveData" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_foldersFilesMap" Type="InArgument(scg:Dictionary(x:String, s:String[]))" />
    <x:Property Name="out_folderTextFilesMap" Type="OutArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, scg:List(x:String))))" />
    <x:Property Name="out_othersMap" Type="OutArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, scg:List(x:String))))" />
    <x:Property Name="companyCodeMap" Type="InOutArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>654,696</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>RetrieveData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Retrieve Data Flow" sap:VirtualizedContainerService.HintSize="634,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" Default="[New Dictionary(Of String, List(Of String))]" Name="startingLineMap" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:List(x:String)))" Default="[New Dictionary(Of String, Dictionary(Of String, List(Of String)))]" Name="folderTextFilesMap" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:List(x:String)))" Default="[New Dictionary(Of String, Dictionary(Of String, List(Of String)))]" Name="othersMap" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">260,2.4</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">290,77.6 290,135.6</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID1</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">190,275.6</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Read files and create text files" sap:VirtualizedContainerService.HintSize="801,1839" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="folderName" />
          <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="startingLine" />
          <Variable x:TypeArguments="x:Int32" Default="0" Name="counter" />
          <Variable x:TypeArguments="x:String" Name="companyCodeLine" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <DoWhile DisplayName="Folder loop" sap:VirtualizedContainerService.HintSize="759,1547" sap2010:WorkflowViewState.IdRef="DoWhile_2" Condition="[counter &lt; in_foldersFilesMap.Count]">
          <Sequence DisplayName="Files inside folder" sap:VirtualizedContainerService.HintSize="713,1385" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="671,60" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">[startingLine]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">[startingLineMap(in_foldersFilesMap.ElementAt(counter).Key.Split({"\"}, StringSplitOptions.None).Last)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="671,60" sap2010:WorkflowViewState.IdRef="Assign_14">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[companyCodeLine]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[companyCodeMap(in_foldersFilesMap.ElementAt(counter).Key.Split({"\"}, StringSplitOptions.None).Last)]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[in_foldersFilesMap.ElementAt(counter).Value.Count &lt;&gt; 0]" sap:VirtualizedContainerService.HintSize="671,993" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence DisplayName="If data is not 0" sap:VirtualizedContainerService.HintSize="526,845" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" Default="[New Dictionary(Of String, List(Of String))]" Name="textFilesMap" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Loop each files inside folders" sap:VirtualizedContainerService.HintSize="484,313" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[in_foldersFilesMap.ElementAt(counter).Value]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="file" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_8">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="tex" />
                            <Variable x:TypeArguments="x:String" Name="companyCode" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SheetsLoop workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="SheetsLoop.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_file">[file]</InArgument>
                              <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_lineReader">[startingLine]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_folder">[in_foldersFilesMap.ElementAt(counter).Key]</InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_counterFile">[counter]</InArgument>
                              <InOutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:List(x:String)))" x:Key="out_othersMap">[othersMap]</InOutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_companyCodeLine">[companyCodeLine]</InArgument>
                              <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="companyCodeMap">[companyCodeMap]</InOutArgument>
                              <InOutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" x:Key="textFilesMap">[textFilesMap]</InOutArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                  <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[folderName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[in_foldersFilesMap.ElementAt(counter).Key]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[textFilesMap.Count &lt;&gt; 0]" sap:VirtualizedContainerService.HintSize="484,300" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                          <Assign.To>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))">[folderTextFilesMap(folderName)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))">[textFilesMap]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </If.Then>
            </If>
            <Assign sap:VirtualizedContainerService.HintSize="671,60" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[counter + 1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </DoWhile>
        <Assign sap:VirtualizedContainerService.HintSize="759,60" sap2010:WorkflowViewState.IdRef="Assign_12">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:List(x:String)))">[out_othersMap]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:List(x:String)))">[othersMap]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="759,60" sap2010:WorkflowViewState.IdRef="Assign_9">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:List(x:String)))">[out_folderTextFilesMap]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, scg:List(x:String)))">[folderTextFilesMap]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">190,135.6</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">290,201.6 290,275.6</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Create startingLineMap" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="338,315" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">[startingLineMap("zwst")]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)(New String(){"15", "16"})]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">[startingLineMap("zsrv")]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)(New String(){"15"})]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">[startingLineMap("zspm")]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)(New String(){"17", "15"})]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">[startingLineMap("zspl")]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)(New String(){"14", "16"})]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">[startingLineMap("zrw1")]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)(New String(){"14", "6", "18"})]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">[startingLineMap("zraw")]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)(New String(){"17", "3", "18"})]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">[startingLineMap("zfgd_zsfg")]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)(New String(){"11", "3", "18", "2"})]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">[startingLineMap("zfgd_ltl")]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)(New String(){"6", "3", "2"})]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="338,315" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[companyCodeMap("zwst")]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">E15</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[companyCodeMap("zsrv")]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">E15</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[companyCodeMap("zspm")]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">E17</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[companyCodeMap("zspl")]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">E14</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[companyCodeMap("zrw1")]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">F14</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[companyCodeMap("zraw")]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">E17</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[companyCodeMap("zfgd_zsfg")]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">E11</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[companyCodeMap("zfgd_ltl")]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">E6</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID0</x:Reference>
      </FlowStep.Next>
    </FlowStep>
  </Flowchart>
</Activity>