<Activity mc:Ignorable="sap sap2010" x:Class="DataChecking" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="pdfContent" Type="InArgument(scg:Dictionary(x:Int32, scg:List(x:String)))" />
    <x:Property Name="scrappedContent" Type="InOutArgument(scg:Dictionary(x:Int32, scg:List(x:String)))" />
    <x:Property Name="failData" Type="InOutArgument(scg:List(x:String))" />
    <x:Property Name="leftoverData" Type="InOutArgument(scg:List(x:Int32))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1339,3852</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>DataChecking_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="DataChecking" sap:VirtualizedContainerService.HintSize="1319,3792" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Default="0" Name="counter" />
      <Variable x:TypeArguments="scg:List(x:Int32)" Default="[New List(Of Int32)]" Name="listMaterial" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="leftoverCounter" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="fail" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="1277,2738" sap2010:WorkflowViewState.IdRef="DoWhile_1" Condition="[counter &lt; pdfContent.Count]">
      <Sequence sap:VirtualizedContainerService.HintSize="1231,2576" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <Sequence.Variables>
          <Variable x:TypeArguments="scg:List(x:String)" Name="listContent" />
          <Variable x:TypeArguments="x:Int32" Name="noMaterial" />
          <Variable x:TypeArguments="x:String" Name="hargaSatuan" />
          <Variable x:TypeArguments="x:String" Name="totalAmount" />
          <Variable x:TypeArguments="x:String" Name="quantity" />
          <Variable x:TypeArguments="x:String" Name="errorLog" />
          <Variable x:TypeArguments="x:Int32" Default="0" Name="failFlag" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="1189,60" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[noMaterial]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[pdfContent.ElementAt(counter).Key]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="1189,60" sap2010:WorkflowViewState.IdRef="Assign_3">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[totalAmount]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[pdfContent.ElementAt(counter).Value(0)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="1189,60" sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[hargaSatuan]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[pdfContent.ElementAt(counter).Value(1)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="1189,60" sap2010:WorkflowViewState.IdRef="Assign_5">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[quantity]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[pdfContent.ElementAt(counter).Value(2)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="1189,60" sap2010:WorkflowViewState.IdRef="Assign_13">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[errorLog]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[noMaterial.ToString + " : "]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[scrappedContent.Keys.Contains(noMaterial)]" sap:VirtualizedContainerService.HintSize="1189,1482" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="840,1334" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="798,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">[listContent]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)">[scrappedContent(noMaterial)]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[Convert.ToDouble(hargaSatuan.Replace(&quot;.&quot;, &quot;&quot;)) = Convert.ToDouble(listContent(2).ToString.Replace(&quot;.&quot;, &quot;&quot;))]" sap:VirtualizedContainerService.HintSize="798,400" sap2010:WorkflowViewState.IdRef="If_2">
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[errorLog]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[errorLog + "Harga satuan"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[failFlag]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">1</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Else>
              </If>
              <If Condition="[Convert.ToDouble(quantity) &lt;= Convert.ToDouble(listContent(1))]" sap:VirtualizedContainerService.HintSize="798,640" sap2010:WorkflowViewState.IdRef="If_3">
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="653,492" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[failFlag = 1]" sap:VirtualizedContainerService.HintSize="611,400" sap2010:WorkflowViewState.IdRef="If_4">
                      <If.Then>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[errorLog]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[errorLog + ", " + "Quantity"]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[errorLog]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[errorLog + "Quantity"]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[failFlag]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">1</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </If.Else>
              </If>
              <AddToCollection x:TypeArguments="x:Int32" Collection="[listMaterial]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="798,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[noMaterial]" />
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[errorLog]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[errorLog + "No data found"]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[failFlag]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Else>
        </If>
        <If Condition="[failFlag = 1]" sap:VirtualizedContainerService.HintSize="1189,362" sap2010:WorkflowViewState.IdRef="If_5">
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <AddToCollection x:TypeArguments="x:String" Collection="[failData]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[errorLog]" />
              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[fail]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[failFlag]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Then>
        </If>
        <Assign sap:VirtualizedContainerService.HintSize="1189,60" sap2010:WorkflowViewState.IdRef="Assign_7">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[counter + 1]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
    </DoWhile>
    <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1277,358" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[listMaterial]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Int32">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="280,224" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="238,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Remove">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="scg:Dictionary(x:Int32, scg:List(x:String))">[scrappedContent]</InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="x:Int32">[item]</InArgument>
            </InvokeMethod>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <If Condition="[scrappedContent.Count &lt;&gt; 0 And fail = 0]" sap:VirtualizedContainerService.HintSize="1277,524" sap2010:WorkflowViewState.IdRef="If_7">
      <If.Then>
        <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="484,376" sap2010:WorkflowViewState.IdRef="DoWhile_2" Condition="[leftoverCounter &lt; scrappedContent.Count]">
          <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <AddToCollection x:TypeArguments="x:Int32" Collection="[leftoverData]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[Convert.ToInt32(scrappedContent.ElementAt(leftoverCounter).Value(3))]" />
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[leftoverCounter]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[leftoverCounter + 1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </DoWhile>
      </If.Then>
    </If>
  </Sequence>
</Activity>